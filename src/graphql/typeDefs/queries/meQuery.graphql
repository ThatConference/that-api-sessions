type MeQuery {
  all: [MySession]
    @auth(requires: "sessions")
    @deprecated(reason: "Use submitted which returns session union")

  session(id: ID!): TheSessions @auth(requires: "sessions")

  voting(eventId: ID!): VotingQuery @auth(requires: "sessions")

  "returns session me submitted"
  submitted: [TheSessions] @auth(requires: "sessions")

  """
  Return my favorites.
  Use 'ANY' to return favorites from any/all events
  historyDays: number of days before today to include
  """
  favorites(eventId: ID!, historyDays: Int): [SessionFavorite]
    @auth(requires: "sessions")

  """
  Options for downloading favorited sessions
  Use 'ANY' to return favorites from any/all events
  historyDays: number of days before today to include
  Defaults to 'ANY', 30
  """
  favoritesDownload(eventId: ID!, historyDays: Int): FavoritesDownloadsQuery
    @auth(requires: "sessions")
}
