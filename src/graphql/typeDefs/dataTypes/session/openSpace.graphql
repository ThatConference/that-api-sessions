type OpenSpace implements Base @key(fields: "id") {
  # Start Base interface fields
  "Session unique identifier"
  id: ID!
  "Event id session is associated with"
  eventId: String!
  "Event this session is associated with"
  event: Event!
  "Session slug unique by eventId"
  slug: Slug!
  "The session's title"
  title: String!
  "A shorter more concise description"
  shortDescription: String!
  "Primary interests category for the session"
  primaryCategory: SessionCategory
  "Session's associated speakers. Each will see session under their profile"
  speakers: [PublicProfile]
  "Is the primary speakers a minor?"
  isMinor: Boolean
  "The type of session, informs union resolver of session object to return"
  type: SessionType
  "The target audience for this session, professional, manager, kids, etc."
  targetAudience: [TargetAudience]
  "The target location for this session, in-person, etc."
  targetLocation: TargetLocation
  "Session status. ENUM. E.g. accepted, submitted, etc. "
  status: Status
  "Full duration of session in minutes"
  durationInMinutes: Int
  "Starting time of this session"
  startTime: Date
  "Location of session, physical or virtual"
  location: String
  "Tags to describe session"
  tags: [String]
  "list of expected takeaways for attending this session"
  takeaways: [String]
  "Reference materials for all"
  supportingArtifacts: [Artifact]
  "Members with public profiles who favorited session"
  favoritedBy: [PublicProfile]
  "Total number of members who favorited, includes non-public in count too"
  favoriteCount: Int
  "Communities (as slug) associated with session. initially same as event community"
  communities: [Slug]
  "Assets assigned to this session"
  assets: [Asset]
  "Date time session created"
  createdAt: Date!
  "Date time session last updated"
  lastUpdatedAt: Date!
  "Admin-specific fields"
  admin: SessionAdminFields
}
